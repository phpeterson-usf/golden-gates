/* Shared styles for circuit components */

/* Global input font fix to prevent multiplication symbol issue */
.p-inputtext,
.p-inputnumber-input,
.p-inputtextarea,
.p-dropdown,
.p-multiselect,
.p-chips-input-token,
.p-calendar-input {
  font-family:
    -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
}

/* Prevent text selection during dragging */
.circuit-canvas {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

/* Prevent text selection on property inspector labels */
.component-inspector label {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: default;
}

/* Component body styles */
.component-body {
  cursor: move;
  transition: fill 0.2s ease;
}

/* Keep decorative text elements non-interactive */
.component-label,
.component-value,
.range-label {
  pointer-events: none;
}

/* Wire state visualization */
.wire-high:not(.selected) {
  stroke: var(--color-success); /* Success green for high (1) */
}

.wire-low:not(.selected) {
  stroke: var(--color-wire); /* Use theme color for low (0) */
}

/* Selected wires always show blue, regardless of state */
.wire.selected {
  stroke: var(--color-component-selected-stroke); /* Blue for selected */
}

/* Splitter/merger body styles */
.splitter-body,
.merger-body {
  stroke: var(--color-text-primary);
  stroke-linecap: round;
  cursor: move;
}

.splitter-body.selected,
.merger-body.selected {
  stroke: var(--color-component-selected-stroke);
}

.component-body:hover {
  fill: var(--color-component-hover-fill, #f0f0f0);
}

/* Connection point styles - override inherited move cursor */
.connection-point {
  cursor:
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4" fill="none" stroke="black" stroke-width="2"/><path d="M12 2v4M12 18v4M2 12h4M18 12h4" stroke="black" stroke-width="2"/></svg>')
      12 12,
    crosshair !important;
  transition:
    fill 0.2s ease,
    stroke-width 0.2s ease;
  pointer-events: all;
  fill: var(--color-connection-fill, #000);
}

.connection-point:hover {
  fill: var(--color-connection-hover-fill, #0066cc);
  stroke: var(--color-connection-hover-fill, #0066cc);
  stroke-width: 2;
}

.connection-point.input {
  /* Specific styles for input connection points */
}

.connection-point.output {
  /* Specific styles for output connection points */
}

/* Enhanced connection point colors during wire drawing */
.wire-drawing .connection-point.input:hover {
  fill: var(--color-component-selected-stroke);
  stroke: var(--color-component-selected-stroke);
  stroke-width: 3;
}

.wire-drawing .connection-point.output:hover {
  fill: var(--color-component-selected-stroke);
  stroke: var(--color-component-selected-stroke);
  stroke-width: 3;
}

/* Junction creation mode - visual feedback */
.junction-mode {
  /* Canvas-level styles for junction mode */
}

/* Junction preview should not intercept events - let clicks pass through to wire */
.junction-preview {
  pointer-events: none !important;
}

/* Wire highlighting during junction mode */
.junction-mode .wire-segment:hover {
  stroke: var(--color-component-selected-stroke) !important;
  stroke-width: 4 !important;
  filter: drop-shadow(0 0 6px rgba(59, 130, 246, 0.8));
}

/* Override wire cursor during junction mode - use crosshair for simplicity and reliability */
.junction-mode .wire,
.junction-mode .wire-hitbox,
.junction-mode .wire-segment {
  cursor: crosshair !important;
}

/* Additional visual enhancements */
.wire-drawing .circuit-canvas {
  background-color: rgba(59, 130, 246, 0.05);
}

.junction-mode .circuit-canvas {
  background-color: rgba(59, 130, 246, 0.05);
}

/* Component label styles */
.component-label {
  font-family: monospace;
  font-size: 12px;
  font-weight: normal;
  fill: var(--color-component-text, #000);
  pointer-events: none;
  user-select: none;
}

/* Port label styles for component inputs/outputs */
.port-label {
  font-family: monospace;
  font-size: 10px;
  font-weight: normal;
  fill: var(--color-component-text, #000);
  pointer-events: none;
  user-select: none;
}

/* Range label styles for splitter/merger components */
.range-label {
  font-size: 10px;
  font-weight: 500;
  fill: var(--color-text-primary);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, sans-serif;
  pointer-events: none;
  user-select: none;
}

/* Connector line styles for splitter/merger components */
.connector-line {
  stroke: var(--color-text-primary);
  stroke-width: 2;
  pointer-events: none;
}

/* Component value display */
.component-value {
  font-family: monospace;
  font-size: 12px;
  font-weight: normal;
  fill: var(--color-component-text, #000);
  pointer-events: none;
  user-select: none;
}

/* Component icon text styling for character-based icons (constant, adder, etc.) */
.component-icon-text {
  font-family: monospace;
  font-weight: bold;
  text-anchor: middle;
  dominant-baseline: central;
  pointer-events: none;
  user-select: none;
}

/* Output value display - regular weight by default */
.output-value {
  font-family: monospace;
  font-size: 12px;
  font-weight: normal;
  fill: var(--color-component-text, #000);
  pointer-events: none;
  user-select: none;
}

/* Value update animation for outputs - bold during pulse animation only */
.value-updated {
  animation: valueUpdate 1s ease-out;
  font-weight: bold;
  fill: var(--color-component-selected-stroke) !important;
  transform-origin: 50% 50%;
  transform-box: fill-box;
}

/* Wire styles (for future use) */
.wire {
  fill: none;
  stroke: var(--color-wire);
  stroke-width: 2;
  pointer-events: none;
}

.wire.selected {
  stroke: var(--color-component-selected-stroke);
  stroke-width: 3;
}

/* Grid pattern styles */
.grid-dot {
  fill: var(--color-grid-dot, #cccccc);
}

/* Base selector dropdown styling - override p-component font-size */
.p-dropdown-panel.p-component .p-dropdown-items .p-dropdown-item {
  font-size: 12px !important;
}

.p-dropdown-panel .p-dropdown-items .p-dropdown-item span.p-dropdown-item-label {
  font-size: 12px !important;
}

/* Reduce padding to match inspector style */
.p-dropdown-panel .p-dropdown-items .p-dropdown-item {
  padding: 6px 12px !important;
}

/* Selected value in the dropdown */
.p-dropdown.p-component .p-dropdown-label {
  font-size: 12px !important;
}

/* Step highlighting animations */
@keyframes stepProcessing {
  0% {
    filter: drop-shadow(0 0 0px rgba(245, 158, 11, 0));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(245, 158, 11, 0.8));
  }
  100% {
    filter: drop-shadow(0 0 0px rgba(245, 158, 11, 0));
  }
}

@keyframes stepActive {
  0% {
    filter: drop-shadow(0 0 0px rgba(245, 158, 11, 0));
  }
  100% {
    filter: drop-shadow(0 0 6px rgba(245, 158, 11, 0.6));
  }
}

.step-active {
  animation: stepProcessing 1s ease-in-out infinite;
}

.step-active.step-processing {
  animation: stepProcessing 1s ease-in-out infinite;
}

.step-active.step-active {
  animation: stepActive 0.3s ease-out forwards;
}

.step-active.step-computing {
  animation: stepProcessing 0.8s ease-in-out infinite;
}

/* Error state styles */
.has-error {
  filter: drop-shadow(0 0 4px rgba(239, 68, 68, 0.6));
}

.has-warning {
  filter: drop-shadow(0 0 4px rgba(249, 115, 22, 0.6));
}

/* Error indicator pulse */
@keyframes errorPulse {
  0% {
    filter: drop-shadow(0 0 4px rgba(239, 68, 68, 0.6));
  }
  50% {
    filter: drop-shadow(0 0 8px rgba(239, 68, 68, 0.9));
  }
  100% {
    filter: drop-shadow(0 0 4px rgba(239, 68, 68, 0.6));
  }
}

.has-error.error-pulse {
  animation: errorPulse 1.5s ease-in-out infinite;
}
